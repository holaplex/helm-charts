# Default values for hub-analytics.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

migrate:
  image:
    repository: holaplex/hub-analytics-migrations
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

image:
  repository: holaplex/hub-analytics
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 10000
  runAsGroup: 10000

service:
  type: ClusterIP
  port: 80

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

networkPolicies:
  enabled: false
  extraEgress: []
  extraIngress: []
  # Example:
  # extraEgress:
  #  - to:
  #      - ipBlock:
  #          cidr: 1.2.3.4/16
  #  - to:
  #      - podSelector:
  #          matchLabels:
  #            app.kubernetes.io/name: hub-services-db
  # extraIngress: []

nodeSelector: {}

tolerations: []

affinity: {}

secrets:
  enabled: true
  entries:
    kafkaPassword: ""
    databaseUrl: ""
    cubeAuthToken: ""

environment:
  logLevel: info
  port: "3000"
  kafkaBrokers: "hub-eventbus-cluster-0.hub-eventbus-cluster.default.svc.cluster.local.:9093"
  kafkaSsl: false
  kafkaUsername: ""
  cubeBaseUrl: http://hub-analytics-cube

cubestore:
  enabled: false

cube:
  enabled: false
  image:
    repository: cubejs/cube
    tag: v0.33
  commonAnnotations:
    configmap.reloader.stakater.com/reload: "cube-schemas"
  cubestore:
    host: ""
    port: ""
  config:
    devMode: true
    apiPort: 80
    authSecret: ""
    logLevel: info
    volumes:
      - name: schema
        configMap:
          name: cube-schemas
      - name: config
        configMap:
          name: cube-config
    volumeMounts:
      - name: schema
        readOnly: true
        mountPath: /cube/conf/schema
      - name: config
        readOnly: false
        mountPath: /cube/conf/cube.js
        subPath: cube.js
