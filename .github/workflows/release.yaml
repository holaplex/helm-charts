name: Release Charts

on:
  push:
    branches:
      - main

jobs:
  release:
    permissions:
      contents: write # to push chart release and create a release (helm/chart-releaser-action)
      packages: write # needed for ghcr access
      id-token: write # needed for keyless signing

    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@v3.5
        with:
          version: v3.9.2

      - name: Add dependency chart repos
        run: |
          helm repo add holaplex https://holaplex.github.io/helm-charts
          helm repo add apisix https://charts.apiseven.com
          helm repo add ory https://k8s.ory.sh/helm/charts
          helm repo add bitnami https://charts.bitnami.com/bitnami

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      # # see https://github.com/helm/chart-releaser/issues/183
      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - uses: sigstore/cosign-installer@v2.8.1
      # - name: Push charts to GHCR and sign
      #   env:
      #     COSIGN_EXPERIMENTAL: 1
      #   # when filling gaps with previously released charts, cr would create
      #   # nothing in .cr-release-packages/, and the original globbing character
      #   # would be preserved, causing a non-zero exit. Set nullglob to fix this
      #   run: |
      #     shopt -s nullglob
      #     for pkg in .cr-release-packages/*; do
      #       if [ -z "${pkg:-}" ]; then
      #         break
      #       fi
      #       helm push "${pkg}" oci://ghcr.io/"${GITHUB_REPOSITORY_OWNER}"/charts > .digest
      #       file=${pkg##*/}       # extracts file name from full directory path
      #       name=${file%-*}       # extracts chart name from filename
      #       digest=$(awk -F "[, ]+" '/Digest/{print $NF}' < .digest)
      #       cosign sign ghcr.io/"${GITHUB_REPOSITORY_OWNER}"/charts/"${name}"@"${digest}"
      #     done
